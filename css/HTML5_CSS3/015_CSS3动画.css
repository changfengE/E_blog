.move {
    width: 100px;
    height: 50px;
    background-color: pink;
    /* 2.调用动画 */
    /* 动画名称 */
    animation-name: move;
    /* 持续时间 */
    animation-duration: 3s;
}


/* 1.定义动画 */


/*  
    a.可以做多个状态的变化 keyframe关键帧
    b.里面的百分比要是整数
    c.百分比就是总的时间的划分
 */

@keyframes move {
    0% {
        transform: translate(0);
    }
    25% {
        transform: translate(500px, 0) rotate(180deg);
    }
    50% {
        transform: translate(500px, 10px);
    }
    75% {
        transform: translate(0, 50px);
    }
    100% {
        transform: translate(0);
    }
}


/* 动画常用属性 */

.attribute {
    width: 100px;
    height: 100px;
    background-color: pink;
    /* 动画名 */
    animation-name: move02;
    /* 持续时间 */
    animation-duration: 2s;
    /* 运动曲线 */
    animation-timing-function: linear;
    /* 何时开始 */
    animation-delay: 1s;
    /* 重复次数 infinite无限 */
    animation-iteration-count: infinite;
    /* 是否反方向播放 若想要反方向就写alternate*/
    animation-direction: alternate;
    /* 动画结束后的状态，默认backwards回到起始状态，可以让动画停在结束状态forwards */
    /* animation-fill-mode: forwards; */
}

.attribute:hover {
    /* 鼠标经过盒子，就让盒子停止动画，鼠标离开继续 */
    animation-play-state: paused;
}

@keyframes move02 {
    0% {
        transform: translate(0);
    }
    100% {
        transform: translate(500px, 0);
    }
}


/* steps() */

.steps {
    overflow: hidden;
    width: 0;
    height: 30px;
    white-space: nowrap;
    font-size: 20px;
    background-color: pink;
    /* steps就是分几步来完成动画，有了steps就不要写ease或linear */
    animation: step 4s steps(10) forwards;
}

@keyframes step {
    0% {
        width: 0;
    }
    100% {
        width: 200px;
    }
}